{"version":3,"file":"static/js/421.7002769e.chunk.js","mappings":"+LAMMA,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OANfC,yNAUa,SAASC,IACtB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAaR,OAXAE,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCH,EADnC,2BAEHZ,GAECgB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GAAQ,OAAIN,EAAYM,EAASE,KAAzB,IACbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,IACTG,QAAQf,GAAW,GACvB,GAAE,CAACG,KAGF,gCACGJ,IAAW,gDACVA,GACAE,EAASe,KAAI,SAAAC,GAAM,OACjB,iBAEEC,MAAO,CACLC,OAAQ,OACRC,gBAAiB,UACjBC,OAAQ,qBALZ,WAQE,gBACEH,MAAO,CACLI,MAAO,QACPC,OAAQ,QACRC,aAAc,OACdC,UAAW,WAEbC,IAAKT,EAAOU,KACZC,IAAG,yCAAoCX,EAAOY,iBAEhD,yBACGZ,EAAOU,KADV,eAC4BV,EAAOa,eAlB9Bb,EAAOd,GAFG,MA0B1B,C","sources":["Cast.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst key =\n  process.env.REACT_APP_API_KEY ||\n  `eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYzliZGFlZWZiY2VmMzYwMGM1Mzc2ZDdiYjE1MjAwZSIsInN1YiI6IjY0ODk5NTA2ZTI3MjYwMDBjOTMyYzA2MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.I0pyIiTN3e3yKqy8iOOQ2oQi3mIPg0A-5_HoIOdhlQ8`;\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: `Bearer ${key}`,\n  },\n};\n\nexport default function Cast() {\n  const [loading, setLoading] = useState(true);\n  const [castList, setCastList] = useState([]);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n      options\n    )\n      .then(response => response.json())\n      .then(response => setCastList(response.cast))\n      .catch(err => console.error(err))\n      .finally(setLoading(false));\n  }, [id]);\n\n  return (\n    <>\n      {loading && <p>The cast is loading</p>}\n      {!loading &&\n        castList.map(person => (\n          <div\n            key={person.id}\n            style={{\n              margin: '50px',\n              backgroundColor: '#F5F5F5',\n              border: '1px solid #1A120B',\n            }}\n          >\n            <img\n              style={{\n                width: '100px',\n                height: '100px',\n                marginBottom: '10px',\n                objectFit: 'contain',\n              }}\n              alt={person.name}\n              src={`https://image.tmdb.org/t/p/w500${person.profile_path}`}\n            />\n            <p>\n              {person.name} playing as {person.character}\n            </p>\n          </div>\n        ))}\n    </>\n  );\n}\n"],"names":["options","method","headers","accept","Authorization","process","Cast","useState","loading","setLoading","castList","setCastList","id","useParams","useEffect","fetch","then","response","json","cast","catch","err","console","error","finally","map","person","style","margin","backgroundColor","border","width","height","marginBottom","objectFit","alt","name","src","profile_path","character"],"sourceRoot":""}